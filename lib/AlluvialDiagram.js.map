{"version":3,"sources":["../src/AlluvialDiagram.js"],"names":["CustomPropTypes","AlluvialDiagram","props","nodes","map","node","id","Component","propTypes","arrayOf","shape","oneOfType","string","number","value","step","edges","source","target","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;AACA;;;;AACA;;IAAYA,e;;;;;;;;;;;;AAGZ;;;;IAIqBC,e;;;;;;;;;;;6BAmBV;AACP,aAAO;AAAA;AAAA;AACL;AAAA;AAAA;AAAA;AAAA,SADK;AAEL;AAAA;AAAA;AAAM,eAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,gBAAQ;AACjC,mBAAO;AAAA;AAAA;AAAOC,mBAAKC;AAAZ,aAAP;AACD,WAFK;AAAN;AAFK,OAAP;AAMD;;;;EA1B0C,gBAAMC,S;;AAA9BN,e,CACZO,S,GAAY;AACjBL,SAAO,oBAAUM,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AACvCJ,QAAI,oBAAUK,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,MAA7B,CAApB,CADmC;AAEvCC,WAAO,oBAAUD,MAFsB;AAGvCE,UAAM,oBAAUF;;AAHuB,GAAhB,CAAlB,CADU;AAOjBG,SAAO,oBAAUP,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AACvCO,YAAQ,oBAAUN,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,MAA7B,CAApB,CAD+B;AAEvCK,YAAQ,oBAAUP,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,MAA7B,CAApB;AAF+B,GAAhB,CAAlB;;AAPU,C;AADAZ,e,CAcZkB,Y,GAAe,E;kBAdHlB,e","file":"AlluvialDiagram.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport {area} from 'd3';\n\nimport {makeAccessor, domainFromData, combineDomains} from './utils/Data';\nimport xyPropsEqual from './utils/xyPropsEqual';\nimport * as CustomPropTypes from './utils/CustomPropTypes';\n\n\n/**\n * An alluvial diagram AKA Sankey diagram\n */\n\nexport default class AlluvialDiagram extends React.Component {\n  static propTypes = {\n    nodes: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      value: PropTypes.number,\n      step: PropTypes.number,\n\n    })),\n    edges: PropTypes.arrayOf(PropTypes.shape({\n      source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      target: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    })),\n\n  };\n  static defaultProps = {\n\n  };\n\n\n  render() {\n    return <div>\n      <div>nodes</div>\n      <div>{this.props.nodes.map(node => {\n        return <span>{node.id}</span>;\n      })}</div>\n    </div>\n  }\n}\n"]}